#!/bin/bash

# VERIFY_FIREBASE_CONFIG.SH - SCRIPT DE V√âRIFICATION FIREBASE
# 
# Ce script v√©rifie que la configuration Firebase est correcte
# et que tous les fichiers n√©cessaires sont pr√©sents.

echo "üîç V√©rification de la configuration Firebase Analytics..."
echo "=================================================="

# Couleurs pour l'affichage
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher les r√©sultats
print_result() {
    if [ $1 -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $2${NC}"
    else
        echo -e "${RED}‚ùå $2${NC}"
    fi
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

echo ""
echo "üìã V√©rification des d√©pendances..."

# V√©rifier pubspec.yaml
if grep -q "firebase_analytics" pubspec.yaml; then
    print_result 0 "Firebase Analytics dans pubspec.yaml"
else
    print_result 1 "Firebase Analytics manquant dans pubspec.yaml"
fi

if grep -q "firebase_core" pubspec.yaml; then
    print_result 0 "Firebase Core dans pubspec.yaml"
else
    print_result 1 "Firebase Core manquant dans pubspec.yaml"
fi

if grep -q "firebase_crashlytics" pubspec.yaml; then
    print_result 0 "Firebase Crashlytics dans pubspec.yaml"
else
    print_result 1 "Firebase Crashlytics manquant dans pubspec.yaml"
fi

echo ""
echo "üìÅ V√©rification des fichiers de configuration..."

# V√©rifier google-services.json pour Android
if [ -f "android/app/google-services.json" ]; then
    print_result 0 "google-services.json pr√©sent (Android)"
    
    # V√©rifier le contenu du fichier
    if grep -q "project_id" android/app/google-services.json; then
        print_result 0 "google-services.json semble valide"
    else
        print_warning "google-services.json pourrait √™tre invalide"
    fi
else
    print_result 1 "google-services.json manquant (Android)"
fi

# V√©rifier GoogleService-Info.plist pour iOS
if [ -f "ios/Runner/GoogleService-Info.plist" ]; then
    print_result 0 "GoogleService-Info.plist pr√©sent (iOS)"
    
    # V√©rifier le contenu du fichier
    if grep -q "GOOGLE_APP_ID" ios/Runner/GoogleService-Info.plist; then
        print_result 0 "GoogleService-Info.plist semble valide"
    else
        print_warning "GoogleService-Info.plist pourrait √™tre invalide"
    fi
else
    print_result 1 "GoogleService-Info.plist manquant (iOS)"
fi

# V√©rifier GoogleService-Info.plist pour macOS
if [ -f "macos/Runner/GoogleService-Info.plist" ]; then
    print_result 0 "GoogleService-Info.plist pr√©sent (macOS)"
    
    # V√©rifier le contenu du fichier
    if grep -q "GOOGLE_APP_ID" macos/Runner/GoogleService-Info.plist; then
        print_result 0 "GoogleService-Info.plist semble valide (macOS)"
    else
        print_warning "GoogleService-Info.plist pourrait √™tre invalide (macOS)"
    fi
else
    print_result 1 "GoogleService-Info.plist manquant (macOS)"
fi

echo ""
echo "üìÑ V√©rification des fichiers de code..."

# V√©rifier analytics_service.dart
if [ -f "lib/services/analytics_service.dart" ]; then
    print_result 0 "analytics_service.dart pr√©sent"
    
    # V√©rifier les m√©thodes principales
    if grep -q "logAppInstall" lib/services/analytics_service.dart; then
        print_result 0 "M√©thode logAppInstall pr√©sente"
    else
        print_result 1 "M√©thode logAppInstall manquante"
    fi
    
    if grep -q "logScreenView" lib/services/analytics_service.dart; then
        print_result 0 "M√©thode logScreenView pr√©sente"
    else
        print_result 1 "M√©thode logScreenView manquante"
    fi
    
    if grep -q "logViewContent" lib/services/analytics_service.dart; then
        print_result 0 "M√©thode logViewContent pr√©sente"
    else
        print_result 1 "M√©thode logViewContent manquante"
    fi
else
    print_result 1 "analytics_service.dart manquant"
fi

# V√©rifier analytics_tracker.dart
if [ -f "lib/services/analytics_tracker.dart" ]; then
    print_result 0 "analytics_tracker.dart pr√©sent"
    
    # V√©rifier les m√©thodes principales
    if grep -q "startScreenTracking" lib/services/analytics_tracker.dart; then
        print_result 0 "M√©thode startScreenTracking pr√©sente"
    else
        print_result 1 "M√©thode startScreenTracking manquante"
    fi
    
    if grep -q "trackButtonClick" lib/services/analytics_tracker.dart; then
        print_result 0 "M√©thode trackButtonClick pr√©sente"
    else
        print_result 1 "M√©thode trackButtonClick manquante"
    fi
else
    print_result 1 "analytics_tracker.dart manquant"
fi

# V√©rifier l'initialisation dans main.dart
if [ -f "lib/main.dart" ]; then
    if grep -q "Firebase.initializeApp" lib/main.dart; then
        print_result 0 "Firebase.initializeApp dans main.dart"
    else
        print_result 1 "Firebase.initializeApp manquant dans main.dart"
    fi
    
    if grep -q "AnalyticsService.initialize" lib/main.dart; then
        print_result 0 "AnalyticsService.initialize dans main.dart"
    else
        print_result 1 "AnalyticsService.initialize manquant dans main.dart"
    fi
    
    if grep -q "AnalyticsTracker.startSession" lib/main.dart; then
        print_result 0 "AnalyticsTracker.startSession dans main.dart"
    else
        print_result 1 "AnalyticsTracker.startSession manquant dans main.dart"
    fi
else
    print_result 1 "main.dart manquant"
fi

echo ""
echo "üîß V√©rification de l'int√©gration dans les √©crans..."

# V√©rifier l'utilisation dans home_screen.dart
if [ -f "lib/screens/home_screen.dart" ]; then
    if grep -q "AnalyticsScreenMixin" lib/screens/home_screen.dart; then
        print_result 0 "AnalyticsScreenMixin utilis√© dans home_screen.dart"
    else
        print_warning "AnalyticsScreenMixin non utilis√© dans home_screen.dart"
    fi
    
    if grep -q "AnalyticsTracker.trackButtonClick" lib/screens/home_screen.dart; then
        print_result 0 "Tracking des boutons dans home_screen.dart"
    else
        print_warning "Tracking des boutons non impl√©ment√© dans home_screen.dart"
    fi
else
    print_result 1 "home_screen.dart manquant"
fi

echo ""
echo "üìä V√©rification des d√©pendances Flutter..."

# V√©rifier si flutter pub get a √©t√© ex√©cut√©
if [ -f "pubspec.lock" ]; then
    if grep -q "firebase_analytics" pubspec.lock; then
        print_result 0 "Firebase Analytics install√© via pubspec.lock"
    else
        print_result 1 "Firebase Analytics non install√©"
    fi
else
    print_warning "pubspec.lock manquant - ex√©cutez 'flutter pub get'"
fi

echo ""
echo "üöÄ Tests de compilation..."

# Tester la compilation
if command -v flutter &> /dev/null; then
    echo "Compilation en cours..."
    flutter analyze --no-fatal-infos > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        print_result 0 "Compilation r√©ussie"
    else
        print_result 1 "Erreurs de compilation d√©tect√©es"
        print_info "Ex√©cutez 'flutter analyze' pour voir les d√©tails"
    fi
else
    print_warning "Flutter non install√© ou non dans le PATH"
fi

echo ""
echo "üìã R√©sum√© des v√©rifications..."

# Compter les erreurs
errors=0
warnings=0

# Compter les erreurs dans la sortie
errors=$(echo "$output" | grep -c "‚ùå" || echo "0")
warnings=$(echo "$output" | grep -c "‚ö†Ô∏è" || echo "0")

echo ""
echo "=================================================="
echo "üìä R√©sum√© :"
echo "   Erreurs d√©tect√©es : $errors"
echo "   Avertissements : $warnings"

if [ $errors -eq 0 ]; then
    echo -e "${GREEN}üéâ Configuration Firebase Analytics OK !${NC}"
    echo ""
    echo "Prochaines √©tapes :"
    echo "1. D√©ployer l'application"
    echo "2. V√©rifier les donn√©es dans Firebase Console"
    echo "3. Tester les √©v√©nements avec test_analytics_integration.dart"
else
    echo -e "${RED}‚ö†Ô∏è  Des probl√®mes ont √©t√© d√©tect√©s${NC}"
    echo ""
    echo "Actions recommand√©es :"
    echo "1. Corriger les erreurs list√©es ci-dessus"
    echo "2. V√©rifier les fichiers de configuration Firebase"
    echo "3. Ex√©cuter 'flutter pub get'"
    echo "4. Relancer ce script de v√©rification"
fi

echo ""
echo "üìö Documentation :"
echo "- FIREBASE_ANALYTICS_INTEGRATION.md"
echo "- test_analytics_integration.dart"
echo ""

echo "üîó Liens utiles :"
echo "- Firebase Console : https://console.firebase.google.com/"
echo "- Documentation Flutter Firebase : https://firebase.flutter.dev/"
echo "- Analytics DebugView : https://console.firebase.google.com/project/_/analytics/debugview" 